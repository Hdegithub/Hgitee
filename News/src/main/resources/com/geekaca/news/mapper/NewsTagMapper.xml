<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekaca.news.mapper.NewsTagMapper">

    <resultMap id="BaseResultMap" type="com.geekaca.news.domain.NewsTag">
        <id property="tagId" column="tag_id" jdbcType="INTEGER"/>
        <result property="tagName" column="tag_name" jdbcType="VARCHAR"/>
        <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="TagNewsMap" type="com.geekaca.news.domain.TagNewsCount">
        <id property="tagId" column="tag_id" jdbcType="INTEGER"/>
        <result property="tagName" column="tag_name" jdbcType="VARCHAR"/>
        <result property="tagCount" column="tagCount" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Base_Column_List">
        tag_id
        ,tag_name,is_deleted,
        create_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_news_tag
        where tag_id = #{tagId,jdbcType=INTEGER}
    </select>
    <select id="searchAll" resultMap="BaseResultMap">
        select *
        from tb_news_tag
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from tb_news_tag
        where tag_id = #{tagId,jdbcType=INTEGER}
    </delete>
    <update id="deleteBatch">
        update tb_news_tag
        set is_deleted=1 where tag_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <insert id="insert" keyColumn="tag_id" keyProperty="tagId" parameterType="com.geekaca.news.domain.NewsTag"
            useGeneratedKeys="true">
        insert into tb_news_tag
        ( tag_id, tag_name, is_deleted
        , create_time)
        values ( #{tagId,jdbcType=INTEGER}, #{tagName,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}
               , #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="tag_id" keyProperty="tagId" parameterType="com.geekaca.news.domain.NewsTag"
            useGeneratedKeys="true">
        insert into tb_news_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tagId != null">tag_id,</if>
            <if test="tagName != null">tag_name,</if>
            <if test="isDeleted != null">is_deleted,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tagId != null">#{tagId,jdbcType=INTEGER},</if>
            <if test="tagName != null">#{tagName,jdbcType=VARCHAR},</if>
            <if test="isDeleted != null">#{isDeleted,jdbcType=TINYINT},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <insert id="batchInsertBlogTag" parameterType="java.util.List" useGeneratedKeys="true"
            keyProperty="tagId">
        INSERT into tb_news_tag(tag_name)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.tagName,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.geekaca.news.domain.NewsTag">
        update tb_news_tag
        <set>
            <if test="tagName != null">
                tag_name = #{tagName,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where tag_id = #{tagId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.geekaca.news.domain.NewsTag">
        update tb_news_tag
        set tag_name    = #{tagName,jdbcType=VARCHAR},
            is_deleted  = #{isDeleted,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where tag_id = #{tagId,jdbcType=INTEGER}
    </update>
    <select id="selectTagNewsCounts" resultMap="TagNewsMap">
        SELECT tag.tag_id,
               tag.tag_name,
               count(nw.news_title) as tagCount
        FROM tb_news nw,
             tb_news_tag tag,
             tb_news_tag_relation ttr
        WHERE nw.news_id = ttr.news_id
          AND ttr.tag_id = tag.tag_id
        group by tag.tag_id
        order by tagCount desc limit 10
    </select>
    <select id="findTagList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_news_tag
        where is_deleted=0
        order by tag_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>
    <select id="getTotalTags" parameterType="Map" resultType="int">
        select count(*)
        from tb_news_tag
        where is_deleted = 0
    </select>
    <select id="selectByTagName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_news_tag
        where tag_name = #{tagName,jdbcType=VARCHAR} AND is_deleted = 0
    </select>
    <select id="getTagCount" resultMap="TagNewsMap">
        SELECT t_r.*, t.tag_name
        FROM (SELECT r.tag_id, r.tag_count
              FROM (SELECT tag_id, COUNT(*) AS tag_count
                    FROM (SELECT tr.tag_id
                          FROM tb_news_tag_relation tr
                                   LEFT JOIN tb_news b ON tr.news_id = b.news_id
                          WHERE b.is_deleted = 0) trb
                    GROUP BY tag_id) r
              ORDER BY tag_count DESC LIMIT 20) AS t_r
                 LEFT JOIN tb_news_tag t ON t_r.tag_id = t.tag_id
        WHERE t.is_deleted = 0
    </select>
</mapper>
